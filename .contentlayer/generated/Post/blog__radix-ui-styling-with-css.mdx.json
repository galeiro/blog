{
  "title": "Styling Radix UI with CSS",
  "summary": "Quick tip for styling Radix Primitives with plain CSS, CSS Modules, Vanilla Extract and more.",
  "publishedAt": "2021-12-15",
  "tags": [
    "CSS",
    "React",
    "Radix UI"
  ],
  "body": {
    "raw": "\nIf you take accessibility seriously (you should), [Radix UI](https://www.radix-ui.com) by [Modulz](https://modulz.app) is a really great library that takes care of all the hard things about building accessible components:\n\n- Keyboard Navigation\n- Focus management\n- Screen reader support\n- Typehead support\n- RTL support\n- etc..\n\n## Styling Radix Primitives\n\nStyling a primitive out of the box is super easy as all primitives accept className as a prop\n\n```tsx\nimport * as AccordionPrimitive from '@radix-ui/react-accordion';\n\n<AccordionPrimivite.Root className={styles.root}>\n  â€¦\n</AccordionPrimitive.Root>\n```\n\nMost often you won't use the primitives out-of-the-box like this though. Chances are high that you want to incorporate Radix primitives into your own design system and add extra styles. If you want to expose the same API to the design system consumer you'll need to re-export the Primitives. [The docs](https://www.radix-ui.com/docs/primitives/overview/styling) explain how easily you can do this with Stitches/CSS-IN-JS:\n\n```tsx\nimport { styled } from '@stitches/react';\nimport * as Accordion from '@radix-ui/react-accordion';\n\nconst StyledItem = styled(Accordion.Item, {\n  borderBottom: '1px solid gainsboro',\n});\n\nconst StyledPanel = styled(Accordion.Panel, {\n  padding: 10,\n});\n```\n\nVery clean! What about plain css,  vanilla extract or any other css solution?\n\n```tsx\nimport * as React from 'react';\nimport * as AccordionPrimitive from '@radix-ui/react-accordion';\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentProps<typeof AccordionPrimitive.Item>\n>((props, forwardedRef) => {\n  const { className, ...itemProps } = props;\n  return (\n    <AccordionPrimitive.Item\n      {...itemProps}\n      ref={forwardedRef}\n      className={'accordion-item ' + className}\n    />\n  );\n});\n\nconst AccordionPanel = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Panel>,\n  React.ComponentProps<typeof AccordionPrimitive.Panel>\n>((props, forwardedRef) => {\n  const { className, ...itemProps } = props;\n  return (\n    <AccordionPrimitive.Panel\n      {...itemProps}\n      ref={forwardedRef}\n      className={'accordion-panel ' + className}\n    />\n  );\n});\n```\n\nThat's a lot of boilerplate for essentially adding a classNameâ€¦\n\n## Adding a className to Radix UI Primitives\n\nSince we are not changing anything about the component, simply adding a className we can make a small HOC that removes all the boilerplate for us. You might be familiar with the concept of HOC from Redux's `connect()`.\n\n<Warning type=\"info\">A higher-order component is a function that takes a component and returns a new component. <Link href=\"https://reactjs.org/docs/higher-order-components.html\">Learn more in the React Docs</Link></Warning>\n\nLets create a file called `withClassName` that will contain the HOC:\n\n```tsx\nimport { ComponentProps, createElement, JSXElementConstructor } from 'react';\n\nexport const withClassName = <T extends keyof JSX.IntrinsicElements | JSXElementConstructor<any>>(\n  component: T,\n  ...classes: string[]\n) => {\n  const name = `${typeof component === 'string' ? component : ''}_${classes[0]}`;\n\n  return {\n    [name](props: ComponentProps<T>) {\n      return createElement(component, {\n        ...props,\n        className: `${props.className} ${classes}`,\n      });\n    },\n  }[name];\n};\n```\n\nThe code accepts a component (in this case a radix Primitive) and a list of classes to add, and returns the same component with the className appended.\n\nNow we can refactor our example above:\n\n```tsx {3-6}\nimport * as React from 'react';\nimport * as AccordionPrimitive from '@radix-ui/react-accordion';\nimport { withClassName } from './withClassName'\n\nconst AccordionItem = withClassName(AccordionPrimitive.Item, 'accordion-item')\nconst AccordionPanel = withClassName(AccordionPrimitive.Panel, 'accordion-panel')\n```\n\nNow the API is much closer to the styled() version and we don't need to type/copy-paste all that typescript/component boilerplate for each component. Repeat this process for all primitives that should have custom styling.\n\nThat's it! This HOC can of course be used for many more cases than just Radix. Let me know if you enjoyed this post by pressing the heart below ðŸ‘‡",
    "code": "var Component=(()=>{var m=Object.create;var l=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var N=Object.getOwnPropertyNames;var k=Object.getPrototypeOf,u=Object.prototype.hasOwnProperty;var y=(a,n)=>()=>(n||a((n={exports:{}}).exports,n),n.exports),g=(a,n)=>{for(var s in n)l(a,s,{get:n[s],enumerable:!0})},o=(a,n,s,c)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let t of N(n))!u.call(a,t)&&t!==s&&l(a,t,{get:()=>n[t],enumerable:!(c=h(n,t))||c.enumerable});return a};var w=(a,n,s)=>(s=a!=null?m(k(a)):{},o(n||!a||!a.__esModule?l(s,\"default\",{value:a,enumerable:!0}):s,a)),b=a=>o(l({},\"__esModule\",{value:!0}),a);var r=y((A,i)=>{i.exports=_jsx_runtime});var P={};g(P,{default:()=>v,frontmatter:()=>f});var e=w(r()),f={title:\"Styling Radix UI with CSS\",publishedAt:\"2021-12-15\",summary:\"Quick tip for styling Radix Primitives with plain CSS, CSS Modules, Vanilla Extract and more.\",tags:[\"CSS\",\"React\",\"Radix UI\"]};function p(a){let n=Object.assign({p:\"p\",a:\"a\",ul:\"ul\",li:\"li\",h2:\"h2\",pre:\"pre\",code:\"code\",span:\"span\"},a.components),{Warning:s,Link:c}=n;return c||d(\"Link\",!0,\"85:113-85:215\"),s||d(\"Warning\",!0,\"85:1-85:225\"),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(n.p,{children:[\"If you take accessibility seriously (you should), \",(0,e.jsx)(n.a,{href:\"https://www.radix-ui.com\",children:\"Radix UI\"}),\" by \",(0,e.jsx)(n.a,{href:\"https://modulz.app\",children:\"Modulz\"}),\" is a really great library that takes care of all the hard things about building accessible components:\"]}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"Keyboard Navigation\"}),`\n`,(0,e.jsx)(n.li,{children:\"Focus management\"}),`\n`,(0,e.jsx)(n.li,{children:\"Screen reader support\"}),`\n`,(0,e.jsx)(n.li,{children:\"Typehead support\"}),`\n`,(0,e.jsx)(n.li,{children:\"RTL support\"}),`\n`,(0,e.jsx)(n.li,{children:\"etc..\"}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"Styling Radix Primitives\"}),`\n`,(0,e.jsx)(n.p,{children:\"Styling a primitive out of the box is super easy as all primitives accept className as a prop\"}),`\n`,(0,e.jsx)(n.pre,{className:\"language-tsx\",children:(0,e.jsxs)(n.code,{className:\"language-tsx code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"import\"}),\" \",(0,e.jsxs)(n.span,{className:\"token imports\",children:[(0,e.jsx)(n.span,{className:\"token operator\",children:\"*\"}),\" \",(0,e.jsx)(n.span,{className:\"token keyword module\",children:\"as\"}),\" \",(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"AccordionPrimitive\"})]}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"from\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:\"'@radix-ui/react-accordion'\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"<\"}),(0,e.jsx)(n.span,{className:\"token class-name\",children:\"AccordionPrimivite.Root\"})]}),\" \",(0,e.jsx)(n.span,{className:\"token attr-name\",children:\"className\"}),(0,e.jsxs)(n.span,{className:\"token script language-javascript\",children:[(0,e.jsx)(n.span,{className:\"token script-punctuation punctuation\",children:\"=\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),\"styles\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token property-access\",children:\"root\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"})]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"})]}),(0,e.jsx)(n.span,{className:\"token plain-text\",children:`\n`})]}),(0,e.jsx)(n.span,{className:\"code-line\",children:(0,e.jsx)(n.span,{className:\"token plain-text\",children:`  \\u2026\n`})}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token plain-text\"}),(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"</\"}),(0,e.jsx)(n.span,{className:\"token class-name\",children:\"AccordionPrimitive.Root\"})]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"})]}),(0,e.jsx)(n.span,{className:\"token plain-text\",children:`\n`})]})]})}),`\n`,(0,e.jsxs)(n.p,{children:[\"Most often you won't use the primitives out-of-the-box like this though. Chances are high that you want to incorporate Radix primitives into your own design system and add extra styles. If you want to expose the same API to the design system consumer you'll need to re-export the Primitives. \",(0,e.jsx)(n.a,{href:\"https://www.radix-ui.com/docs/primitives/overview/styling\",children:\"The docs\"}),\" explain how easily you can do this with Stitches/CSS-IN-JS:\"]}),`\n`,(0,e.jsx)(n.pre,{className:\"language-tsx\",children:(0,e.jsxs)(n.code,{className:\"language-tsx code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"import\"}),\" \",(0,e.jsxs)(n.span,{className:\"token imports\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),\" styled \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"})]}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"from\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:\"'@stitches/react'\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"import\"}),\" \",(0,e.jsxs)(n.span,{className:\"token imports\",children:[(0,e.jsx)(n.span,{className:\"token operator\",children:\"*\"}),\" \",(0,e.jsx)(n.span,{className:\"token keyword module\",children:\"as\"}),\" \",(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"Accordion\"})]}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"from\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:\"'@radix-ui/react-accordion'\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" \",(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"StyledItem\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"styled\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"Accordion\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token property-access\",children:(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"Item\"})}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"  borderBottom\",(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:\"'1px solid gainsboro'\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" \",(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"StyledPanel\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"styled\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"Accordion\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token property-access\",children:(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"Panel\"})}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"  padding\",(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"10\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]})]})}),`\n`,(0,e.jsx)(n.p,{children:\"Very clean! What about plain css,  vanilla extract or any other css solution?\"}),`\n`,(0,e.jsx)(n.pre,{className:\"language-tsx\",children:(0,e.jsxs)(n.code,{className:\"language-tsx code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"import\"}),\" \",(0,e.jsxs)(n.span,{className:\"token imports\",children:[(0,e.jsx)(n.span,{className:\"token operator\",children:\"*\"}),\" \",(0,e.jsx)(n.span,{className:\"token keyword module\",children:\"as\"}),\" \",(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"React\"})]}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"from\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:\"'react'\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"import\"}),\" \",(0,e.jsxs)(n.span,{className:\"token imports\",children:[(0,e.jsx)(n.span,{className:\"token operator\",children:\"*\"}),\" \",(0,e.jsx)(n.span,{className:\"token keyword module\",children:\"as\"}),\" \",(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"AccordionPrimitive\"})]}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"from\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:\"'@radix-ui/react-accordion'\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" \",(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"AccordionItem\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"React\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token property-access\",children:\"forwardRef\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\"<\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"React\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token property-access\",children:(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"ElementRef\"})}),(0,e.jsx)(n.span,{className:\"token operator\",children:\"<\"}),(0,e.jsx)(n.span,{className:\"token keyword\",children:\"typeof\"}),\" \",(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"AccordionPrimitive\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token property-access\",children:(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"Item\"})}),(0,e.jsx)(n.span,{className:\"token operator\",children:\">\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"React\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token property-access\",children:(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"ComponentProps\"})}),(0,e.jsx)(n.span,{className:\"token operator\",children:\"<\"}),(0,e.jsx)(n.span,{className:\"token keyword\",children:\"typeof\"}),\" \",(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"AccordionPrimitive\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token property-access\",children:(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"Item\"})}),(0,e.jsx)(n.span,{className:\"token operator\",children:\">\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token operator\",children:\">\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"props\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" forwardedRef\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token arrow operator\",children:\"=>\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),\" className\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,e.jsx)(n.span,{className:\"token spread operator\",children:\"...\"}),\"itemProps \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" props\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"return\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"<\"}),(0,e.jsx)(n.span,{className:\"token class-name\",children:\"AccordionPrimitive.Item\"})]}),`\n`]})]}),(0,e.jsx)(n.span,{className:\"code-line\",children:(0,e.jsxs)(n.span,{className:\"token tag\",children:[\"      \",(0,e.jsxs)(n.span,{className:\"token spread\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),(0,e.jsx)(n.span,{className:\"token spread operator\",children:\"...\"}),\"itemProps\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"})]}),`\n`]})}),(0,e.jsx)(n.span,{className:\"code-line\",children:(0,e.jsxs)(n.span,{className:\"token tag\",children:[\"      \",(0,e.jsx)(n.span,{className:\"token attr-name\",children:\"ref\"}),(0,e.jsxs)(n.span,{className:\"token script language-javascript\",children:[(0,e.jsx)(n.span,{className:\"token script-punctuation punctuation\",children:\"=\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),\"forwardedRef\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"})]}),`\n`]})}),(0,e.jsx)(n.span,{className:\"code-line\",children:(0,e.jsxs)(n.span,{className:\"token tag\",children:[\"      \",(0,e.jsx)(n.span,{className:\"token attr-name\",children:\"className\"}),(0,e.jsxs)(n.span,{className:\"token script language-javascript\",children:[(0,e.jsx)(n.span,{className:\"token script-punctuation punctuation\",children:\"=\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),(0,e.jsx)(n.span,{className:\"token string\",children:\"'accordion-item '\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"+\"}),\" className\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"})]}),`\n`]})}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"/>\"})]}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" \",(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"AccordionPanel\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"React\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token property-access\",children:\"forwardRef\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\"<\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"React\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token property-access\",children:(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"ElementRef\"})}),(0,e.jsx)(n.span,{className:\"token operator\",children:\"<\"}),(0,e.jsx)(n.span,{className:\"token keyword\",children:\"typeof\"}),\" \",(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"AccordionPrimitive\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token property-access\",children:(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"Panel\"})}),(0,e.jsx)(n.span,{className:\"token operator\",children:\">\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"React\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token property-access\",children:(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"ComponentProps\"})}),(0,e.jsx)(n.span,{className:\"token operator\",children:\"<\"}),(0,e.jsx)(n.span,{className:\"token keyword\",children:\"typeof\"}),\" \",(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"AccordionPrimitive\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token property-access\",children:(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"Panel\"})}),(0,e.jsx)(n.span,{className:\"token operator\",children:\">\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token operator\",children:\">\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"props\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" forwardedRef\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token arrow operator\",children:\"=>\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),\" className\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,e.jsx)(n.span,{className:\"token spread operator\",children:\"...\"}),\"itemProps \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" props\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"return\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"<\"}),(0,e.jsx)(n.span,{className:\"token class-name\",children:\"AccordionPrimitive.Panel\"})]}),`\n`]})]}),(0,e.jsx)(n.span,{className:\"code-line\",children:(0,e.jsxs)(n.span,{className:\"token tag\",children:[\"      \",(0,e.jsxs)(n.span,{className:\"token spread\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),(0,e.jsx)(n.span,{className:\"token spread operator\",children:\"...\"}),\"itemProps\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"})]}),`\n`]})}),(0,e.jsx)(n.span,{className:\"code-line\",children:(0,e.jsxs)(n.span,{className:\"token tag\",children:[\"      \",(0,e.jsx)(n.span,{className:\"token attr-name\",children:\"ref\"}),(0,e.jsxs)(n.span,{className:\"token script language-javascript\",children:[(0,e.jsx)(n.span,{className:\"token script-punctuation punctuation\",children:\"=\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),\"forwardedRef\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"})]}),`\n`]})}),(0,e.jsx)(n.span,{className:\"code-line\",children:(0,e.jsxs)(n.span,{className:\"token tag\",children:[\"      \",(0,e.jsx)(n.span,{className:\"token attr-name\",children:\"className\"}),(0,e.jsxs)(n.span,{className:\"token script language-javascript\",children:[(0,e.jsx)(n.span,{className:\"token script-punctuation punctuation\",children:\"=\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),(0,e.jsx)(n.span,{className:\"token string\",children:\"'accordion-panel '\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"+\"}),\" className\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"})]}),`\n`]})}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"/>\"})]}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]})]})}),`\n`,(0,e.jsx)(n.p,{children:\"That's a lot of boilerplate for essentially adding a className\\u2026\"}),`\n`,(0,e.jsx)(n.h2,{children:\"Adding a className to Radix UI Primitives\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Since we are not changing anything about the component, simply adding a className we can make a small HOC that removes all the boilerplate for us. You might be familiar with the concept of HOC from Redux's \",(0,e.jsx)(n.code,{children:\"connect()\"}),\".\"]}),`\n`,(0,e.jsxs)(s,{type:\"info\",children:[\"A higher-order component is a function that takes a component and returns a new component. \",(0,e.jsx)(c,{href:\"https://reactjs.org/docs/higher-order-components.html\",children:\"Learn more in the React Docs\"})]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Lets create a file called \",(0,e.jsx)(n.code,{children:\"withClassName\"}),\" that will contain the HOC:\"]}),`\n`,(0,e.jsx)(n.pre,{className:\"language-tsx\",children:(0,e.jsxs)(n.code,{className:\"language-tsx code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"import\"}),\" \",(0,e.jsxs)(n.span,{className:\"token imports\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),\" \",(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"ComponentProps\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" createElement\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"JSXElementConstructor\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"})]}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"from\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:\"'react'\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"export\"}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" withClassName \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"<\"}),(0,e.jsx)(n.span,{className:\"token constant\",children:\"T\"}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"extends\"}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"keyof\"}),\" \",(0,e.jsx)(n.span,{className:\"token constant\",children:\"JSX\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token property-access\",children:(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"IntrinsicElements\"})}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"|\"}),\" \",(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"JSXElementConstructor\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\"<\"}),(0,e.jsx)(n.span,{className:\"token builtin\",children:\"any\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\">>\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"  component\",(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token constant\",children:\"T\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token spread operator\",children:\"...\"}),\"classes\",(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token builtin\",children:\"string\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token arrow operator\",children:\"=>\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" name \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsxs)(n.span,{className:\"token template-string\",children:[(0,e.jsx)(n.span,{className:\"token template-punctuation string\",children:\"`\"}),(0,e.jsxs)(n.span,{className:\"token interpolation\",children:[(0,e.jsx)(n.span,{className:\"token interpolation-punctuation punctuation\",children:\"${\"}),(0,e.jsx)(n.span,{className:\"token keyword\",children:\"typeof\"}),\" component \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"===\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:\"'string'\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"?\"}),\" component \",(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:\"''\"}),(0,e.jsx)(n.span,{className:\"token interpolation-punctuation punctuation\",children:\"}\"})]}),(0,e.jsx)(n.span,{className:\"token string\",children:\"_\"}),(0,e.jsxs)(n.span,{className:\"token interpolation\",children:[(0,e.jsx)(n.span,{className:\"token interpolation-punctuation punctuation\",children:\"${\"}),\"classes\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),(0,e.jsx)(n.span,{className:\"token number\",children:\"0\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),(0,e.jsx)(n.span,{className:\"token interpolation-punctuation punctuation\",children:\"}\"})]}),(0,e.jsx)(n.span,{className:\"token template-punctuation string\",children:\"`\"})]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"return\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),\"name\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"props\",(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"ComponentProps\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\"<\"}),(0,e.jsx)(n.span,{className:\"token constant\",children:\"T\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\">\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"      \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"return\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"createElement\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"component\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(n.span,{className:\"token spread operator\",children:\"...\"}),\"props\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        className\",(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsxs)(n.span,{className:\"token template-string\",children:[(0,e.jsx)(n.span,{className:\"token template-punctuation string\",children:\"`\"}),(0,e.jsxs)(n.span,{className:\"token interpolation\",children:[(0,e.jsx)(n.span,{className:\"token interpolation-punctuation punctuation\",children:\"${\"}),\"props\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),\"className\",(0,e.jsx)(n.span,{className:\"token interpolation-punctuation punctuation\",children:\"}\"})]}),(0,e.jsx)(n.span,{className:\"token string\",children:\" \"}),(0,e.jsxs)(n.span,{className:\"token interpolation\",children:[(0,e.jsx)(n.span,{className:\"token interpolation-punctuation punctuation\",children:\"${\"}),\"classes\",(0,e.jsx)(n.span,{className:\"token interpolation-punctuation punctuation\",children:\"}\"})]}),(0,e.jsx)(n.span,{className:\"token template-punctuation string\",children:\"`\"})]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"      \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),\"name\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]})]})}),`\n`,(0,e.jsx)(n.p,{children:\"The code accepts a component (in this case a radix Primitive) and a list of classes to add, and returns the same component with the className appended.\"}),`\n`,(0,e.jsx)(n.p,{children:\"Now we can refactor our example above:\"}),`\n`,(0,e.jsx)(n.pre,{className:\"language-tsx\",children:(0,e.jsxs)(n.code,{className:\"language-tsx code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"import\"}),\" \",(0,e.jsxs)(n.span,{className:\"token imports\",children:[(0,e.jsx)(n.span,{className:\"token operator\",children:\"*\"}),\" \",(0,e.jsx)(n.span,{className:\"token keyword module\",children:\"as\"}),\" \",(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"React\"})]}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"from\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:\"'react'\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"import\"}),\" \",(0,e.jsxs)(n.span,{className:\"token imports\",children:[(0,e.jsx)(n.span,{className:\"token operator\",children:\"*\"}),\" \",(0,e.jsx)(n.span,{className:\"token keyword module\",children:\"as\"}),\" \",(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"AccordionPrimitive\"})]}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"from\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:\"'@radix-ui/react-accordion'\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line highlight-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"import\"}),\" \",(0,e.jsxs)(n.span,{className:\"token imports\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),\" withClassName \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"})]}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"from\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:\"'./withClassName'\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line highlight-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line highlight-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" \",(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"AccordionItem\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"withClassName\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"AccordionPrimitive\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token property-access\",children:(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"Item\"})}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:\"'accordion-item'\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line highlight-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" \",(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"AccordionPanel\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"withClassName\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"AccordionPrimitive\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token property-access\",children:(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"Panel\"})}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:\"'accordion-panel'\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]})]})}),`\n`,(0,e.jsx)(n.p,{children:\"Now the API is much closer to the styled() version and we don't need to type/copy-paste all that typescript/component boilerplate for each component. Repeat this process for all primitives that should have custom styling.\"}),`\n`,(0,e.jsx)(n.p,{children:\"That's it! This HOC can of course be used for many more cases than just Radix. Let me know if you enjoyed this post by pressing the heart below \\u{1F447}\"})]})}function x(a={}){let{wrapper:n}=a.components||{};return n?(0,e.jsx)(n,Object.assign({},a,{children:(0,e.jsx)(p,a)})):p(a)}var v=x;function d(a,n,s){throw new Error(\"Expected \"+(n?\"component\":\"object\")+\" `\"+a+\"` to be defined: you likely forgot to import, pass, or provide it.\"+(s?\"\\nIt\\u2019s referenced in your code at `\"+s+\"` in `/app/data/blog/_mdx_bundler_entry_point-25154b0f-bd44-4af7-8889-331370b482e4.mdx`\":\"\"))}return b(P);})();\n;return Component;"
  },
  "_id": "blog/radix-ui-styling-with-css.mdx",
  "_raw": {
    "sourceFilePath": "blog/radix-ui-styling-with-css.mdx",
    "sourceFileName": "radix-ui-styling-with-css.mdx",
    "sourceFileDir": "blog",
    "contentType": "mdx",
    "flattenedPath": "blog/radix-ui-styling-with-css"
  },
  "type": "Post",
  "slug": "radix-ui-styling-with-css",
  "image": "/blog/radix-ui-styling-with-css/image.png",
  "og": "/blog/radix-ui-styling-with-css/og.jpg"
}